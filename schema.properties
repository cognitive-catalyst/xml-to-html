#--Forces an h1 header to appear at the beginning of the html for the first element
#--Primarily used for when a title follows a unique tagging system
forceStarterHeader=unitTitle
#--specify a sections to explore in the top level

#--Name of the tags that contain everything- usually sec
sectionTag=section

#--Name of the tags that should be transformed to header tags. These are the tags which will become h1, h2, etc.
headerTags.001=title
headerTags.002=article-title

#--Name of tags that define paragraphs- usually p
paragraphTag=p

#--Name of tags that define figures- usually fig
figsOn=false
figureTag=fig

#--Name of tags that define lists- usually list
listsOn=false
listTag=list

#--Name of tags that define elements of the list- usually list-item
listElementTag=listItem

#--Name of tag that defines wrapper for entire table
tableWrapperTag=tabular

#--Name of tags that define tables- usually table
tablesOn=false
tableTag=table
tableRowTag=row
tableEntryTag=entry
tableFooterTag=table-wrap-foot

#--A tag for anything that you want to force a skip. Full path or tag name.
#--textMatch only works to match headers and will force a skip until next header
#--excludeOccurence will make the converter skip every instance of the given section except for the number provided (numbering starts at 1)
skipTags.001=bibliography
skipTags.002=#document/component/header/contentMeta/titleGroup/title/
skipTags.002.excludeOccurrence.001=1
skipTags.textMatch.001=Methods

#--include headers. Ordering doesn't matter. Can be full path or tag name.
#--The names provided will specify the topmost sections to be included in html. All children of these sections are included unless specified in the skipTags property
includeTags.001=body
includeTags.002=#document/component/header/contentMeta/titleGroup/
includeTags.003=#document/component/header/contentMeta/abstractGroup/
includeTags.003.forceDepth=2

#--Tag replacement mappings. Generally, the replace.with should remain unchanged. These are the first 
#--transformations which take place and it's done by renaming the tag so that all original attributes are kept as is.
#--This is the preferred way to replace tags. I will include a method to regex force changes to the document later.
xmlReplaceTextTag.001=bold
xmlReplaceTextTag.001.with=b
xmlReplaceTextTag.003=underline
xmlReplaceTextTag.003.with=u
xmlReplaceTextTag.005=italic
xmlReplaceTextTag.005.with=i
xmlReplaceTextTag.007=xref
xmlReplaceTextTag.007.with=a
#xmlReplaceTextTag.009=link
#xmlReplaceTextTag.009.with=a

#----------------------------------------------------------------------------------------------------------
#------------------------Warning: These should not be changed unless you really know what you're doing.----
#----------------------------------------------------------------------------------------------------------

htmlTableTag.open=<table>
htmlTableTag.close=</table>
htmlTableEntryTag.open=<td>
htmlTableEntryTag.close=</td>
htmlTableRowTag.open=<tr>
htmlTableRowTag.close=</tr>
htmlListTag.open=<ol style=\"list-style-type: decimal\">
htmlListTag.close=</ol>
htmlListEntryTag.open=<li>
htmlListEntryTag.close=</li>
htmlBodyTag.open=<body>
htmlBodyTag.close=</body>
htmlHtmlTag.open=<html>
htmlHtmlTag.close=</html>
htmlMetaTag=<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />
